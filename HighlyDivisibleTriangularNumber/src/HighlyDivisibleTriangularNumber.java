/*The sequence of triangle numbers is generated by adding the natural numbers.
So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:

1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...

Let us list the factors of the first seven triangle numbers:

 1: 1
 3: 1,3
 6: 1,2,3,6
10: 1,2,5,10
15: 1,3,5,15
21: 1,3,7,21
28: 1,2,4,7,14,28
We can see that 28 is the first triangle number to have over five divisors.

What is the value of the first triangle number to have over five hundred divisors?*/

public class HighlyDivisibleTriangularNumber {

    public static int factorCounter(long num){
        int ctr = 0;
        for(int i=1; i<=(int)Math.sqrt(num); i++)
        {
            if(num%i==0 && i*i!=num)
            {
                ctr+=2;
            }
            else if (i*i==num)
            {
                ctr++;
            }
        }
        return ctr;
    }

    public static long highlyDivisibleTriangularNumber(){
        long triangularNumber = 0;
        for (int i = 1; i<Long.MAX_VALUE; i++){
            triangularNumber += i;
            if(factorCounter(triangularNumber) > 500)
                return triangularNumber;
        }
        return 0;
    }

    public static void main(String[] args) {
        long startTime = System.nanoTime();
        System.out.println(highlyDivisibleTriangularNumber());
        long endTime = System.nanoTime();
        long totalTime = endTime - startTime;
        System.out.println("Time: "+totalTime/1000000.000+"ms");
    }

}
